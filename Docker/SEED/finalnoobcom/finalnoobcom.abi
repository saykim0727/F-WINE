{"version":"eosio::abi/1.0","types":[],"structs":[{"name":"yield_info","base":"","fields":[{"name":"owner","type":"name"},{"name":"expiration","type":"time_point_sec"}]},{"name":"st_round","base":"","fields":[{"name":"player","type":"name"},{"name":"team","type":"uint8"},{"name":"ended","type":"bool"},{"name":"end","type":"time_point_sec"},{"name":"red","type":"uint64"},{"name":"blue","type":"uint64"},{"name":"key","type":"uint64"},{"name":"eos","type":"uint64"},{"name":"pot","type":"uint64"},{"name":"mask","type":"uint64"},{"name":"redmask","type":"uint64"},{"name":"bluemask","type":"uint64"},{"name":"start","type":"time_point_sec"}]},{"name":"st_player","base":"","fields":[{"name":"affiliate_name","type":"name"},{"name":"aff_vault","type":"uint64"},{"name":"pot_vault","type":"uint64"},{"name":"red","type":"uint64"},{"name":"blue","type":"uint64"},{"name":"key","type":"uint64"},{"name":"eos","type":"uint64"},{"name":"mask","type":"uint64"}]},{"name":"transfer","base":"","fields":[{"name":"from","type":"name"},{"name":"to","type":"name"},{"name":"quantity","type":"asset"},{"name":"memo","type":"string"}]},{"name":"withdraw","base":"","fields":[{"name":"to","type":"name"}]},{"name":"create","base":"","fields":[{"name":"start","type":"time_point_sec"}]},{"name":"setowner","base":"","fields":[{"name":"new_owner","type":"name"}]},{"name":"yieldcontrol","base":"","fields":[{"name":"yield_seconds","type":"uint32"}]},{"name":"extend","base":"","fields":[{"name":"new_yield_seconds","type":"uint32"}]},{"name":"regain","base":"","fields":[]}],"actions":[{"name":"transfer","type":"transfer","ricardian_contract":"# CONTRACT FOR finalnoob::transfer\n\n## ACTION NAME: transfer\n\n### Parameters\n\nInput parameters:\n\n- `from` (account_name)\n- `to` (account_name)\n- `quantity` (asset)\n- `memo` (string)\n\nImplied parameters:\n\n- `account_name` (sending account)\n- `account_name` (receiving account)\n- `asset` (token or currency to transfer)\n- `string` (memo regarding referrals)\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to react to the transfer of a quantity of a token or currency to another account. It will grant the invoker a number of noobs for the round.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"withdraw","type":"withdraw","ricardian_contract":"# CONTRACT FOR finalnoob::withdraw\n\n## ACTION NAME: withdraw\n\n### Parameters\n\nInput parameters:\n\n- `to` (account_name)\n\nImplied parameters:\n\n- `account_name` (account to send earnings to)\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to send earnings from pot or dividends to account.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"create","type":"create","ricardian_contract":"# CONTRACT FOR finalnoob::create\n\n## ACTION NAME: create\n\n### Parameters\n\nInput parameters:\n\n- `start` (time_point_sec)\n\nImplied parameters:\n\n- `time_point_sec` (starting time to the sec for round)\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to create a round of the game. It shall have no other effect.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"setowner","type":"setowner","ricardian_contract":"# CONTRACT FOR finalnoob::setowner\n\n## ACTION NAME: setowner\n\n### Parameters\n\nInput parameters:\n\n- `new_owner` (account_name)\n\nImplied parameters:\n\n- `account_name` (owner with ability to regain contract control)\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to set an owner that can regain ownership after a period of time before yielding autonomous control to a contract account.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"yieldcontrol","type":"yieldcontrol","ricardian_contract":"# CONTRACT FOR finalnoob::yieldcontrol\n\n## ACTION NAME: yieldcontrol\n\n### Parameters\n\nInput parameters:\n\n- `yield_seconds` (time_point_sec)\n\nImplied parameters:\n\n- `uint32_t` (time in seconds to yield control to contract)\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to yield autonomy to a contract, disallowing control by any other party until set seconds has passed.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"extend","type":"extend","ricardian_contract":"# CONTRACT FOR finalnoob::extend\n\n## ACTION NAME: extend\n\n### Parameters\n\nInput parameters:\n\n- `new_yield_seconds` (uint32_t)\n\nImplied parameters:\n\n- `uint32_t` (number of sec to extend)\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to extend the period of temporary immutability and contract account autonomy.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"regain","type":"regain","ricardian_contract":"# CONTRACT FOR finalnoob::regain\n\n## ACTION NAME: regain\n\n### Parameters\n\nInput parameters:\n\n- none\n\nImplied parameters:\n\n- none\n\n### Intent\n\nINTENT. The intention of the author and the invoker of this contract is to regain ownership and control from autonomous contract.\n\n### Term\n\nTERM. This Contract expires at the conclusion of code execution.\n"}],"tables":[{"name":"yieldinfo","index_type":"i64","key_names":["owner"],"key_types":["name"],"type":"yield_info"},{"name":"round","index_type":"i64","key_names":["player"],"key_types":["name"],"type":"st_round"},{"name":"player","index_type":"i64","key_names":["affiliate_name"],"key_types":["name"],"type":"st_player"}],"error_messages":[],"abi_extensions":[],"variants":[]}