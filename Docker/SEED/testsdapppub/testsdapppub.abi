"{\"version\":\"eosio::abi/1.0\",\"types\":[{\"new_type_name\":\"symbol_name\",\"type\":\"uint64\"}],\"structs\":[{\"name\":\"cur_stats\",\"base\":\"\",\"fields\":[{\"name\":\"supply\",\"type\":\"asset\"},{\"name\":\"max_supply\",\"type\":\"asset\"},{\"name\":\"issuer\",\"type\":\"name\"}]},{\"name\":\"symbol_type\",\"base\":\"\",\"fields\":[{\"name\":\"value\",\"type\":\"symbol_name\"}]},{\"name\":\"st_game\",\"base\":\"\",\"fields\":[{\"name\":\"symbol\",\"type\":\"symbol_type\"},{\"name\":\"owner\",\"type\":\"name\"},{\"name\":\"base_eos\",\"type\":\"int128\"},{\"name\":\"base_stake\",\"type\":\"int64\"},{\"name\":\"base_option\",\"type\":\"int64\"},{\"name\":\"deserved_option\",\"type\":\"int64\"},{\"name\":\"claimed_option\",\"type\":\"int64\"},{\"name\":\"eos\",\"type\":\"int128\"},{\"name\":\"stake\",\"type\":\"int64\"},{\"name\":\"lock_up_period\",\"type\":\"uint32\"},{\"name\":\"start_time\",\"type\":\"uint32\"},{\"name\":\"base_fee_percent\",\"type\":\"uint8\"},{\"name\":\"init_fee_percent\",\"type\":\"uint8\"}]},{\"name\":\"account\",\"base\":\"\",\"fields\":[{\"name\":\"balance\",\"type\":\"asset\"}]},{\"name\":\"reg\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"},{\"name\":\"memo\",\"type\":\"string\"}]},{\"name\":\"sell\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"},{\"name\":\"quantity\",\"type\":\"asset\"}]},{\"name\":\"consume\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"},{\"name\":\"quantity\",\"type\":\"asset\"},{\"name\":\"memo\",\"type\":\"string\"}]},{\"name\":\"hellodapppub\",\"base\":\"\",\"fields\":[{\"name\":\"base_eos_quantity\",\"type\":\"asset\"},{\"name\":\"maximum_stake\",\"type\":\"asset\"},{\"name\":\"option_quantity\",\"type\":\"asset\"},{\"name\":\"lock_up_period\",\"type\":\"uint32\"},{\"name\":\"base_fee_percent\",\"type\":\"uint8\"},{\"name\":\"init_fee_percent\",\"type\":\"uint8\"}]},{\"name\":\"destroy\",\"base\":\"\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"}]},{\"name\":\"claim\",\"base\":\"\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"sell\",\"type\":\"bool\"}]},{\"name\":\"newtoken\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"},{\"name\":\"base_eos_quantity\",\"type\":\"asset\"},{\"name\":\"maximum_stake\",\"type\":\"asset\"},{\"name\":\"option_quantity\",\"type\":\"asset\"},{\"name\":\"lock_up_period\",\"type\":\"uint32\"},{\"name\":\"base_fee_percent\",\"type\":\"uint8\"},{\"name\":\"init_fee_percent\",\"type\":\"uint8\"}]},{\"name\":\"transfer\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"},{\"name\":\"to\",\"type\":\"name\"},{\"name\":\"quantity\",\"type\":\"asset\"},{\"name\":\"memo\",\"type\":\"string\"}]},{\"name\":\"receipt\",\"base\":\"\",\"fields\":[{\"name\":\"from\",\"type\":\"name\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"in\",\"type\":\"asset\"},{\"name\":\"out\",\"type\":\"asset\"},{\"name\":\"fee\",\"type\":\"asset\"}]},{\"name\":\"create\",\"base\":\"\",\"fields\":[{\"name\":\"issuer\",\"type\":\"name\"},{\"name\":\"maximum_supply\",\"type\":\"asset\"}]},{\"name\":\"issue\",\"base\":\"\",\"fields\":[{\"name\":\"to\",\"type\":\"name\"},{\"name\":\"quantity\",\"type\":\"asset\"},{\"name\":\"memo\",\"type\":\"string\"}]}],\"actions\":[{\"name\":\"reg\",\"type\":\"reg\",\"ricardian_contract\":\"\"},{\"name\":\"sell\",\"type\":\"sell\",\"ricardian_contract\":\"CONTRACT FOR tokendapppub::sell## ACTION NAME: sell\\n### Parameters### Parameters\\n* `from` (token seller)* `from` (token seller)\\n* `quantity` (token selling amount)* `quantity` (token selling amount)\\n\\n### Intent### Intent\\nINTENT. The main purpose of this contract is to help users sell the token. The selling fee defined by the DApp project owner will be deducted from the token selling amount and will be distributed to the current token holders.INTENT. The main purpose of this contract is to help users sell the token. The selling fee defined by the DApp project owner will be deducted from the token selling amount and will be distributed to the current token holders.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"consume\",\"type\":\"consume\",\"ricardian_contract\":\"CONTRACT FOR tokendapppub::consume## ACTION NAME: consume\\n### Parameters### Parameters\\nInput parameters:Input parameters:\\n\\n* `from` (token consumer)* `from` (token consumer)\\n* `quantity` (token consumption amount)* `quantity` (token consumption amount)\\n* `memo` (DApp project owner will be notified of the \\\"memo\\\" info and used it as parameters for convenience)* `memo` (DApp project owner will be notified of the \\\"memo\\\" info and used it as parameters for convenience)\\n\\n### Intent### Intent\\nINTENT. The main purpose of this contract is to help users consume the token. During the exection process, DApp project owner will be notified of the consumed token amount and \\\"memo\\\" info. When users comsume this specific token, the total supply of this token still remains the same, but the current circulating supply will be reduced. Others users will benefit from this token consumption behaviour as their holding tokens will be appreciated.INTENT. The main purpose of this contract is to help users consume the token. During the exection process, DApp project owner will be notified of the consumed token amount and \\\"memo\\\" info. When users comsume this specific token, the total supply of this token still remains the same, but the current circulating supply will be reduced. Others users will benefit from this token consumption behaviour as their holding tokens will be appreciated.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"hellodapppub\",\"type\":\"hellodapppub\",\"ricardian_contract\":\"CONTRACT FOR tokendapppub::hellodapppub## ACTION NAME: hellodapppub\\n### Parameters### Parameters\\nInput parameters:Input parameters:\\n\\n* `base_eos_quantity` (basic EOS fund pool)* `base_eos_quantity` (basic EOS fund pool)\\n* `maximum_stake` (maximum token supply)* `maximum_stake` (maximum token supply)\\n* `option_quantity` \uff08option amount for the token project owner\uff09* `option_quantity` \uff08option amount for the token project owner\uff09\\n* `lock_up_period` (option lock period: seconds)* `lock_up_period` (option lock period: seconds)\\n* `base_fee_percent` (lowest token selling fee)* `base_fee_percent` (lowest token selling fee)\\n* `init_fee_percent` (initial token selling fee)* `init_fee_percent` (initial token selling fee)\\n\\n### Intent### Intent\\nINTENT. The main purpose of this contract is to create the platform token for the contract owner.INTENT. The main purpose of this contract is to create the platform token for the contract owner.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"destroy\",\"type\":\"destroy\",\"ricardian_contract\":\"# CONTRACT FOR tokendapppub::destroy## ACTION NAME: destroy\\n### Parameters### Parameters\\nInput parameters:Input parameters:\\n\\n* `name` (token name)* `name` (token name)\\n\\n### Intent### Intent\\nIntent. The main purpose of this contract is to help the DApp project owner destroy the token. Before the project owner destroys, it is necessary to confirm that all users have sold their token, otherwise it will be impossible to destroy if there are still users holding the token.Intent. The main purpose of this contract is to help the DApp project owner destroy the token. Before the project owner destroys, it is necessary to confirm that all users have sold their token, otherwise it will be impossible to destroy if there are still users holding the token.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"claim\",\"type\":\"claim\",\"ricardian_contract\":\"CONTRACT FOR tokendapppub::claim## ACTION NAME: claim\\n### Parameters### Parameters\\nInput parameters:Input parameters:\\n\\n* `name` (token name)* `name` (token name)\\n* `sell` (whether to sell)* `sell` (whether to sell)\\n\\n### Intent### Intent\\nThe primary purpose of this contract is to help DApp project owners claim their expired options. After the project owners claim their options, they could choose to sell the tokens as how the ordinary users do.The primary purpose of this contract is to help DApp project owners claim their expired options. After the project owners claim their options, they could choose to sell the tokens as how the ordinary users do.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"newtoken\",\"type\":\"newtoken\",\"ricardian_contract\":\"CONTRACT FOR tokendapppub::newtoken## ACTION NAME: newtoken\\n### Parameters### Parameters\\nInput parameters:Input parameters:\\n\\n* `from` (token issuer)* `from` (token issuer)\\n* `base_eos_quantity` (basic EOS fund pool)* `base_eos_quantity` (basic EOS fund pool)\\n* `maximum_stake` (maxmiun token supply)* `maximum_stake` (maxmiun token supply)\\n* `option_quantity` \uff08option amount for the token project owner\uff09* `option_quantity` \uff08option amount for the token project owner\uff09\\n* `lock_up_period` (option lock period: seconds)* `lock_up_period` (option lock period: seconds)\\n* `base_fee_percent` (minimum token selling fee)* `base_fee_percent` (minimum token selling fee)\\n* `init_fee_percent` (initial token selling fee)* `init_fee_percent` (initial token selling fee)\\n\\n### Intent### Intent\\nINTENT. The main purpose of this contract is for the DApp prject teams to issue their own tokens, and it will cost the platform tokens in the meantime.INTENT. The main purpose of this contract is for the DApp prject teams to issue their own tokens, and it will cost the platform tokens in the meantime.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"transfer\",\"type\":\"transfer\",\"ricardian_contract\":\"\"},{\"name\":\"receipt\",\"type\":\"receipt\",\"ricardian_contract\":\"# CONTRACT FOR tokendapppub::receipt## ACTION NAME: receipt\\n### Parameters### Parameters\\nInput parameters:Input parameters:\\n\\n* `from` (user account name)* `from` (user account name)\\n* `type` (buy or sell type)* `type` (buy or sell type)\\n* `in` (quantity of token transfer in)* `in` (quantity of token transfer in)\\n* `out` (quantity of token transfer out)* `out` (quantity of token transfer out)\\n\\n### Intent### Intent\\nIntent. The main purpose of this contract is to help the user to get receipt feedback on action history. Only for buy and sell action now.Intent. The main purpose of this contract is to help the user to get receipt feedback on action history. Only for buy and sell action now.\\n\\n### Term### Term\\nTERM. This Contract expires at the conclusion of code execution.TERM. This Contract expires at the conclusion of code execution.\\n\"},{\"name\":\"create\",\"type\":\"create\",\"ricardian_contract\":\"\"},{\"name\":\"issue\",\"type\":\"issue\",\"ricardian_contract\":\"\"}],\"tables\":[{\"name\":\"stat\",\"index_type\":\"i64\",\"key_names\":[\"supply\"],\"key_types\":[\"asset\"],\"type\":\"cur_stats\"},{\"name\":\"games\",\"index_type\":\"i64\",\"key_names\":[\"symbol\"],\"key_types\":[\"symbol_type\"],\"type\":\"st_game\"},{\"name\":\"accounts\",\"index_type\":\"i64\",\"key_names\":[\"balance\"],\"key_types\":[\"asset\"],\"type\":\"account\"}],\"error_messages\":[],\"abi_extensions\":[],\"variants\":[]}"