{"version":"eosio::abi/1.0","types":[],"structs":[{"name":"acceptfight","base":"","fields":[{"name":"player2","type":"name"},{"name":"fight_id","type":"uint64"},{"name":"hash","type":"checksum256"}]},{"name":"accounts","base":"","fields":[{"name":"owner","type":"name"},{"name":"playwitheos","type":"bool"},{"name":"promotion","type":"name"},{"name":"inventory","type":"items[]"},{"name":"promocounted","type":"bool"},{"name":"impid","type":"uint64"},{"name":"newfightid","type":"uint64"},{"name":"lasttransaction","type":"time_point_sec"},{"name":"trxreset","type":"time_point_sec"}]},{"name":"additems","base":"","fields":[{"name":"type","type":"uint8"},{"name":"name","type":"string"},{"name":"atk","type":"uint16"},{"name":"def","type":"uint16"},{"name":"exp","type":"uint16"},{"name":"statspoints","type":"uint16"},{"name":"consumable","type":"uint8"},{"name":"lvl","type":"uint64"},{"name":"premium","type":"uint8"},{"name":"marketplace","type":"uint8"},{"name":"customized","type":"bool"}]},{"name":"addmkproduct","base":"","fields":[{"name":"item_id","type":"uint64"},{"name":"price","type":"asset"}]},{"name":"reserveimp","base":"","fields":[{"name":"player","type":"name"},{"name":"market_id","type":"uint64"}]},{"name":"reserveitem","base":"","fields":[{"name":"player","type":"name"},{"name":"market_id","type":"uint64"}]},{"name":"cancelfight","base":"","fields":[{"name":"player","type":"name"},{"name":"fight_id","type":"uint64"}]},{"name":"cancelres","base":"","fields":[{"name":"reserver","type":"name"},{"name":"mk_id","type":"uint64"},{"name":"sell_id","type":"uint64"}]},{"name":"cancelsell","base":"","fields":[{"name":"player","type":"name"},{"name":"market_id","type":"uint64"}]},{"name":"cfightplayer","base":"","fields":[{"name":"player","type":"name"},{"name":"fight_id","type":"uint64"}]},{"name":"changeconfig","base":"","fields":[{"name":"hpperpoint","type":"uint8"},{"name":"defperpoint","type":"uint8"},{"name":"expincreaseprolvl","type":"uint8"},{"name":"expperfightwon","type":"uint8"},{"name":"expperfightlost","type":"uint8"},{"name":"startexp","type":"uint8"},{"name":"starthppoints","type":"uint8"},{"name":"startdefpoints","type":"uint8"},{"name":"fee","type":"float64"},{"name":"feerest","type":"float64"},{"name":"feeaddress","type":"name"},{"name":"depositaddress","type":"name"},{"name":"updatepaid","type":"name"},{"name":"numtrx","type":"uint16"}]},{"name":"changeimp","base":"","fields":[{"name":"player","type":"name"},{"name":"imp_id","type":"uint64"},{"name":"head_id","type":"uint64"},{"name":"body_id","type":"uint64"},{"name":"arms_id","type":"uint64"},{"name":"legs_id","type":"uint64"},{"name":"weapon_id","type":"uint64"},{"name":"armorbody_id","type":"uint64"}]},{"name":"changestats","base":"","fields":[{"name":"player","type":"name"},{"name":"hp","type":"uint8"},{"name":"def","type":"uint8"}]},{"name":"chitemowner","base":"","fields":[{"name":"market_id","type":"uint64"},{"name":"player","type":"name"},{"name":"sell_id","type":"uint64"}]},{"name":"chmkprice","base":"","fields":[{"name":"owner","type":"name"},{"name":"mkitemid","type":"uint64"},{"name":"price","type":"asset"}]},{"name":"claimbonus","base":"","fields":[{"name":"player","type":"name"}]},{"name":"claimexp","base":"","fields":[{"name":"player","type":"name"},{"name":"fight_id","type":"uint64"}]},{"name":"claimmki","base":"","fields":[{"name":"player","type":"name"},{"name":"sell_id","type":"uint64"}]},{"name":"claimmkimp","base":"","fields":[{"name":"player","type":"name"},{"name":"sell_id","type":"uint64"}]},{"name":"consumeitem","base":"","fields":[{"name":"player","type":"name"},{"name":"item_id","type":"uint64"}]},{"name":"createacc","base":"","fields":[{"name":"player","type":"name"},{"name":"play_with_eos","type":"uint8"},{"name":"promoter","type":"name"}]},{"name":"createimp","base":"","fields":[{"name":"player","type":"name"},{"name":"imp_name","type":"string"},{"name":"head","type":"uint64"},{"name":"body","type":"uint64"},{"name":"arms","type":"uint64"},{"name":"legs","type":"uint64"},{"name":"startweaponid","type":"uint64"},{"name":"color","type":"string"}]},{"name":"csellimp","base":"","fields":[{"name":"player","type":"name"},{"name":"market_id","type":"uint64"}]},{"name":"dclaimexp","base":"","fields":[{"name":"player","type":"name"},{"name":"fight_id","type":"uint64"}]},{"name":"deleteacc","base":"","fields":[{"name":"player","type":"name"}]},{"name":"deleteimp","base":"","fields":[{"name":"player","type":"name"},{"name":"imp_id","type":"uint64"}]},{"name":"deleteitem","base":"","fields":[{"name":"item_id","type":"uint64"}]},{"name":"delinvitem","base":"","fields":[{"name":"player","type":"name"},{"name":"item_id","type":"uint64"}]},{"name":"dfightdatap1","base":"","fields":[{"name":"player1","type":"name"},{"name":"fight_id","type":"uint64"},{"name":"attc_pos_r1","type":"uint8"},{"name":"attc_pos_r2","type":"uint8"},{"name":"attc_pos_r3","type":"uint8"},{"name":"attc_pos_r4","type":"uint8"},{"name":"attc_pos_r5","type":"uint8"},{"name":"def_pos_r1","type":"uint8"},{"name":"def_pos_r2","type":"uint8"},{"name":"def_pos_r3","type":"uint8"},{"name":"def_pos_r4","type":"uint8"},{"name":"def_pos_r5","type":"uint8"},{"name":"rndn","type":"uint64"}]},{"name":"dfightdatap2","base":"","fields":[{"name":"player2","type":"name"},{"name":"attc_pos_r1","type":"uint8"},{"name":"attc_pos_r2","type":"uint8"},{"name":"attc_pos_r3","type":"uint8"},{"name":"attc_pos_r4","type":"uint8"},{"name":"attc_pos_r5","type":"uint8"},{"name":"def_pos_r1","type":"uint8"},{"name":"def_pos_r2","type":"uint8"},{"name":"def_pos_r3","type":"uint8"},{"name":"def_pos_r4","type":"uint8"},{"name":"def_pos_r5","type":"uint8"},{"name":"fight_id","type":"uint64"},{"name":"rndn","type":"uint64"}]},{"name":"fightdatap1","base":"","fields":[{"name":"player1","type":"name"},{"name":"fight_id","type":"uint64"},{"name":"attc_pos_r1","type":"uint8"},{"name":"attc_pos_r2","type":"uint8"},{"name":"attc_pos_r3","type":"uint8"},{"name":"attc_pos_r4","type":"uint8"},{"name":"attc_pos_r5","type":"uint8"},{"name":"def_pos_r1","type":"uint8"},{"name":"def_pos_r2","type":"uint8"},{"name":"def_pos_r3","type":"uint8"},{"name":"def_pos_r4","type":"uint8"},{"name":"def_pos_r5","type":"uint8"},{"name":"rndn","type":"uint64"}]},{"name":"fightdatap2","base":"","fields":[{"name":"player2","type":"name"},{"name":"attc_pos_r1","type":"uint8"},{"name":"attc_pos_r2","type":"uint8"},{"name":"attc_pos_r3","type":"uint8"},{"name":"attc_pos_r4","type":"uint8"},{"name":"attc_pos_r5","type":"uint8"},{"name":"def_pos_r1","type":"uint8"},{"name":"def_pos_r2","type":"uint8"},{"name":"def_pos_r3","type":"uint8"},{"name":"def_pos_r4","type":"uint8"},{"name":"def_pos_r5","type":"uint8"},{"name":"fight_id","type":"uint64"},{"name":"rndn","type":"uint64"}]},{"name":"fightpaid","base":"","fields":[{"name":"fight_id","type":"uint64"},{"name":"player","type":"name"}]},{"name":"fights","base":"","fields":[{"name":"id","type":"uint64"},{"name":"accountidp1","type":"name"},{"name":"impidp1","type":"uint64"},{"name":"namep1","type":"string"},{"name":"ownerp1","type":"name"},{"name":"lvlp1","type":"uint64"},{"name":"hppointsp1","type":"uint32"},{"name":"defpointsp1","type":"uint32"},{"name":"weaponidp1","type":"items"},{"name":"armorimpp1","type":"items"},{"name":"bodypartsimpp1","type":"items[]"},{"name":"attcposroundsp1","type":"uint8[]"},{"name":"defposroundsp1","type":"uint8[]"},{"name":"accountidp2","type":"name"},{"name":"impidp2","type":"uint64"},{"name":"namep2","type":"string"},{"name":"ownerp2","type":"name"},{"name":"lvlp2","type":"uint64"},{"name":"hppointsp2","type":"uint32"},{"name":"defpointsp2","type":"uint32"},{"name":"weaponidp2","type":"items"},{"name":"armorimpp2","type":"items"},{"name":"bodypartsimpp2","type":"items[]"},{"name":"attcposroundsp2","type":"uint8[]"},{"name":"defposroundsp2","type":"uint8[]"},{"name":"winner","type":"name"},{"name":"hashvalue1","type":"checksum256"},{"name":"hashvalue2","type":"checksum256"},{"name":"paidp1","type":"bool"},{"name":"paidp2","type":"bool"},{"name":"player2acceptchallenge","type":"bool"},{"name":"bidpp","type":"asset"},{"name":"closed","type":"bool"},{"name":"sendfights","type":"string"},{"name":"fightdatap1s","type":"string"},{"name":"expclaimedp1","type":"bool"},{"name":"expclaimedp2","type":"bool"},{"name":"expwinner","type":"float64"},{"name":"canceltime","type":"time_point_sec"},{"name":"rounddmgp1","type":"uint32[]"},{"name":"rounddmgp2","type":"uint32[]"},{"name":"state","type":"uint8"},{"name":"fdsendp1","type":"bool"},{"name":"fdsendp2","type":"bool"},{"name":"colorp1","type":"string"},{"name":"colorp2","type":"string"},{"name":"lvldiff","type":"float64"},{"name":"expthislvlp1","type":"float64"},{"name":"expthislvlp2","type":"float64"},{"name":"hpp1","type":"uint32"},{"name":"hpp2","type":"uint32"}]},{"name":"gameconf","base":"","fields":[{"name":"id","type":"uint64"},{"name":"hpperpoint","type":"uint8"},{"name":"defperpoint","type":"uint8"},{"name":"expincreaseprolvl","type":"uint8"},{"name":"expperfightwon","type":"uint8"},{"name":"expperfightlost","type":"uint8"},{"name":"startexp","type":"uint8"},{"name":"starthppoints","type":"uint8"},{"name":"startdefpoints","type":"uint8"},{"name":"fee","type":"float64"},{"name":"feerest","type":"float64"},{"name":"promotionitems","type":"uint64[]"},{"name":"feeaddress","type":"name"},{"name":"depositaddress","type":"name"},{"name":"updatepaid","type":"name"},{"name":"bonusitems","type":"uint64[]"},{"name":"numtrx","type":"uint16"},{"name":"startgame","type":"uint8"}]},{"name":"getpromoitem","base":"","fields":[{"name":"player","type":"name"},{"name":"pos","type":"uint64"}]},{"name":"globalcount","base":"","fields":[{"name":"id","type":"uint64"},{"name":"counterfights","type":"uint64"},{"name":"counteritems","type":"uint64"},{"name":"countermarket","type":"uint64"},{"name":"counterimp","type":"uint64"},{"name":"countersell","type":"uint64"},{"name":"counterstart","type":"uint16"}]},{"name":"imps","base":"","fields":[{"name":"id","type":"uint64"},{"name":"name","type":"string"},{"name":"owner","type":"name"},{"name":"expnextlvl","type":"float64"},{"name":"exp","type":"float64"},{"name":"lvl","type":"uint64"},{"name":"hppoints","type":"uint32"},{"name":"defpoints","type":"uint32"},{"name":"freestatspoints","type":"uint8"},{"name":"weapon","type":"items"},{"name":"won","type":"uint32"},{"name":"lost","type":"uint32"},{"name":"draw","type":"uint32"},{"name":"played","type":"uint32"},{"name":"armorimp","type":"items"},{"name":"bodypartsimp","type":"items[]"},{"name":"counted","type":"bool"},{"name":"lastaction","type":"time_point_sec"},{"name":"color","type":"string"},{"name":"expthislvl","type":"float64"}]},{"name":"initialize","base":"","fields":[]},{"name":"items","base":"","fields":[{"name":"id","type":"uint64"},{"name":"type","type":"uint64"},{"name":"name","type":"string"},{"name":"atk","type":"uint16"},{"name":"def","type":"uint16"},{"name":"exp","type":"float64"},{"name":"statspoints","type":"uint16"},{"name":"consumable","type":"bool"},{"name":"lvl","type":"uint64"},{"name":"premium","type":"bool"},{"name":"marketplace","type":"bool"},{"name":"customized","type":"bool"},{"name":"version","type":"uint8"},{"name":"cooldown","type":"time_point_sec"}]},{"name":"login","base":"","fields":[{"name":"player","type":"name"}]},{"name":"marketplace","base":"","fields":[{"name":"id","type":"uint64"},{"name":"item","type":"items"},{"name":"impid","type":"uint64"},{"name":"price","type":"asset"},{"name":"reserved","type":"bool"},{"name":"reserver","type":"name"},{"name":"owner","type":"name"},{"name":"sellid","type":"uint64"},{"name":"reservelimit","type":"time_point_sec"},{"name":"type","type":"uint64"},{"name":"lvl","type":"uint64"},{"name":"hppoints","type":"uint32"},{"name":"defpoints","type":"uint32"}]},{"name":"marketsell","base":"","fields":[{"name":"id","type":"uint64"}]},{"name":"mktpclaim","base":"","fields":[{"name":"id","type":"uint64"},{"name":"owner","type":"name"},{"name":"item","type":"items"},{"name":"impid","type":"uint64"}]},{"name":"playertmp","base":"","fields":[{"name":"id","type":"name"},{"name":"promoitems","type":"uint64[]"},{"name":"pastfightids","type":"uint64[]"},{"name":"openfightids","type":"uint64[]"},{"name":"openfightchallengesids","type":"uint64[]"},{"name":"eosfhplayed","type":"float64"},{"name":"claimed","type":"float64"},{"name":"itemsellids","type":"uint64[]"},{"name":"impids","type":"uint64[]"},{"name":"pendingbuy","type":"uint64[]"},{"name":"claim","type":"uint64[]"},{"name":"promotionlvl","type":"uint8"},{"name":"numtrx","type":"uint8"},{"name":"eoswon","type":"float64"}]},{"name":"playwitheos","base":"","fields":[{"name":"player","type":"name"},{"name":"play_with_eos","type":"uint8"}]},{"name":"sellimp","base":"","fields":[{"name":"player","type":"name"},{"name":"imp_id","type":"uint64"},{"name":"price","type":"asset"}]},{"name":"sellitem","base":"","fields":[{"name":"player","type":"name"},{"name":"item_id","type":"uint64"},{"name":"price","type":"asset"}]},{"name":"sendfight","base":"","fields":[{"name":"player1","type":"name"},{"name":"player2","type":"name"},{"name":"hash","type":"checksum256"},{"name":"bid","type":"asset"},{"name":"opp_imp_id","type":"uint64"}]},{"name":"simpactive","base":"","fields":[{"name":"player","type":"name"},{"name":"imp_id","type":"uint64"}]},{"name":"updateitem","base":"","fields":[{"name":"item_id","type":"uint64"},{"name":"type","type":"uint64"},{"name":"name","type":"string"},{"name":"atk","type":"uint16"},{"name":"def","type":"uint16"},{"name":"exp","type":"uint16"},{"name":"statspoints","type":"uint16"},{"name":"consumable","type":"uint8"},{"name":"lvl","type":"uint64"},{"name":"premium","type":"uint8"},{"name":"marketplace","type":"uint8"},{"name":"customized","type":"uint8"}]}],"actions":[{"name":"acceptfight","type":"acceptfight","ricardian_contract":"# CONTRACT FOR eosimpbattle::acceptfight'\n## ACTION NAME: acceptfight\n\n### Parameters\nInput parameters:\n\n* `player2` (player2 of the fight)\n* `fight_id` (player2 of the new fight)\n* `hash` (hash value from the fight data)\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `checksum256`\n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to accept the fight challenge.  The {{ player2 }} (invoker) is clear that the choosen attc_pos_r1 - attc_pos_r5 and def_pos_r1 - def_pos_r5 and {{rndn}} can not be changed later when {{ eosimpbattle::fightdatap2}} is invoked as these will be used to generate an hash-value. You also accept if you bid EOS, that you might get less EOS back for a win or draw because of inaccuracy after the fee were deducted. \n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"additems","type":"additems","ricardian_contract":"# CONTRACT FOR eosimpbattle::additems\n## ACTION NAME: additems\n\n### Parameters\nInput parameters:\n\n* `type` (type of the item which should be added)\n* `name` (name of the item)\n* `atk` (attack value of the item)\n* `def` (defense value of the item)\n* `exp` (how much experience the item gives)\n* `statspoints` (how many statsfpoints the item gives)\n* `consumable` (if the item is consumable)\n* `lvl` (lvl of the imp, to consume/wear/use the item)\n* `premium` (check if the item is a premum item)\n* `marketplace` (if the item is listed in the marketplace)\n* `customized` (if the item was customized)\n\n\nImplied parameters: \n\n* `uint8_t` \n* `string` \n* `uint16_t`\n* `uint16_t`\n* `uint16_t`\n* `uint16_t`\n* `uint8_t` \n* `uint64_t`\n* `uint8_t` \n* `uint8_t` \n* `bool` a\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to add new items to the game. This action can only be called by the contract owner.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"addmkproduct","type":"addmkproduct","ricardian_contract":"# CONTRACT FOR eosimpbattle::addmkproduct\n## ACTION NAME: addmkproduct\n\n### Parameters\nInput parameters:\n\n\n* `item_id` (id of the item)\n* `price` (price of the item in the  inventory)\n\n\n\nImplied parameters: \n\n* `uint64_t` \n* `asset`\n\n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to add an existing item to the marketplace with an specified price {{ price }}. This action can only be executed from the owner of the contract.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"reserveimp","type":"reserveimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::reserveimp\n## ACTION NAME: reserveimp\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the imp)\n* `market_id` (id of the imp in the marketplace)\n\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to reserve the imp {{ market_id }} from the marketplace. The invoker takes note that he should send the required EOS (price) with in 5 Minutes as after, the seller can revoke {{player}} reservation. In that case, the {{ player }} is no more able to buy the product and it may come to an error while sending the required EOS to the specified EOS Account in the contract. This may can be result in the loss of the sent EOS.  \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"reserveitem","type":"reserveitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::reserveitem\n## ACTION NAME: reserveitem\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the item)\n* `market_id` (id of the item in the marketplace)\n\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to reserve the item {{ market_id }} from the marketplace. The invoker takes note that he should send the required EOS (price) with in 5 Minutes as after, the seller can revoke {{player}} reservation. In that case, the {{ player }} is no more able to buy the product and it may come to an error while sending the required EOS to the specified EOS Account in the contract. This may can be result in the loss of the sent EOS.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"cancelfight","type":"cancelfight","ricardian_contract":"# CONTRACT FOR eosimpbattle::cancelfight\n## ACTION NAME: cancelfight\n\n### Parameters\nInput parameters:\n\n* `player` (player of the account)\n* `fight_id` (the id of the fight which shuld be canceled)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is the cancellation of the fight with {{ fight_id }} and to send the bids to the appropriate player determind by the contract. The {{ player }} also needs to be one of the two players involved in the fight.  This action can only be executed from the owner of the contract or initiated by one of the players in the fight {{ fight_id }}. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"cancelres","type":"cancelres","ricardian_contract":"# CONTRACT FOR eosimpbattle::cancelres\n## ACTION NAME: cancelres\n\n### Parameters\nInput parameters:\n\n* `reserver` (reserver the one who reserved the item)\n* `mk_id` (id of the item in the marketplace)\n* `sell_id` (id of the item in the marketplace)\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `uint64_t` \n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to cancel the reservation of the item {{ market_id }} and {{ sell_id }} from the marketplace. The player has to be the one who reserved the item {{ market_id }} with {{ sell_id }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"cancelsell","type":"cancelsell","ricardian_contract":"# CONTRACT FOR eosimpbattle::cancelsell\n## ACTION NAME: cancelsell\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the item)\n* `market_id` (id of the item in the marketplace)\n\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to cancel the sell of the item {{ market_id }} from the marketplace or delete the reservation from an other player after the time for the reservation is over. The player has to be the owner of the item {{ market_id }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"cfightplayer","type":"cfightplayer","ricardian_contract":"# CONTRACT FOR eosimpbattle::cfightplayer\n## ACTION NAME: cfightplayer\n\n### Parameters\nInput parameters:\n\n* `player` (player of the account)\n* `fight_id` (the id of the fight which should be canceled)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to initiate the cancellation of the fight with {{ fight_id }} and to send the bids to the appropriate player determind by the contract. The {{ player }} also needs to be one of the two players involved in the fight. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"changeconfig","type":"changeconfig","ricardian_contract":"# CONTRACT FOR eosimpbattle::updateitem\n## ACTION NAME: updateitem\n\n### Parameters\nInput parameters:\n\n* `hpperpoint` (id of the item)\n* `defperpoint` (type of the item)\n* `expincreaseprolvl` (name of the item)\n* `expperfightwon` (attack value of the item)\n* `expperfightlost` (defense value of the item)\n* `startexp` (exp value of the item)\n* `statspoints` (statspoints value of the item)\n* `starthppoints` (if item is consumable)\n* `startdefpoints` (aneeded lvl)\n* `fee` (if item is premium)\n* `feerest` (if item is in the marketplace)\n* `feeaddress` (if item is customized)\n* `depositaddress` (if item is customized)\n* `updatepaid` (if item is customized)\n* `numtrx` (if item is customized)\n\n\nImplied parameters: \n\n* `uint8_t` \n* `uint8_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `double`\n* `double`\n* `name`\n* `name`\n* `name`\n* `uint16_t`\n\n\n\n\n* `uint8_t`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change the config with the parameters. This action can only be executed from the owner of the contract.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"changeimp","type":"changeimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::changebeast\n## ACTION NAME: changebeast\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the imp)\n* `imp_id` (id of the imp)\n* `head_id` (head_id of the choosen head in the inventory)\n* `body_id` (body_id of the choosen head in the inventory)\n* `arms_id` (arms_id of the choosen head in the inventory)\n* `legs_id` (legs_id of the choosen head in the inventory)\n* `weapon_id` (weapon_id of the choosen head in the inventory)\n* `armorbody_id` (armorbody_id of the choosen head in the inventory)\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `uint64_t`\n* `uint64_t`\n* `uint64_t`\n* `uint64_t`\n* `uint64_t` \n* `uint64_t`\n* `uint64_t`\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change the imp {{ imp_id }} with the choosen items in the inventory of the  {{ player }}. The {{ player }} has to be the owner of the items and the imp. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"changestats","type":"changestats","ricardian_contract":"# CONTRACT FOR eosimpbattle::changestats\n## ACTION NAME: changestats\n\n### Parameters\nInput parameters:\n\n\n* `player` (player and owner of the item in the inventory)\n* `hp` (hp points for the imp)\n* `def` (def points for the imp)\n\n\nImplied parameters: \n\n* `name` \n* `uint8_t`\n* `uint8_t`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to add the statspoints to hp and def from the free statspoints the imp has. {{ player }} has to be the owner of the account and the imp.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"chitemowner","type":"chitemowner","ricardian_contract":"# CONTRACT FOR eosimpbattle::chitemowner\n## ACTION NAME: chitemowner\n\n### Parameters\nInput parameters:\n\n* `market_id` (id of the item in the marketplace)\n* `player` (player and owner of the item)\n* `sell_id` (sell_id of the item in the marketplace)\n\n\n\n\nImplied parameters: \n\n* `uint64_t` \n* `name` \n* `uint64_t` \n\n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change the owner of the item after the item was paid. The action can only be executed from the owner of the contract or an account with the right permissions.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"chmkprice","type":"chmkprice","ricardian_contract":"# CONTRACT FOR eosimpbattle::chmkprice\n## ACTION NAME: chmkprice\n\n### Parameters\nInput parameters:\n\n* `owner` (owner of the  item)\n* `mkitem_id` (item id in the marketplace)\n* `price` (new price of the item in the marketplace)\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `assett`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change the item price with {{price}}. This action can only be executed from the owner of the contract.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"claimbonus","type":"claimbonus","ricardian_contract":"# CONTRACT FOR eosimpbattle::claimbonus\n## ACTION NAME: claimbonus\n\n### Parameters\nInput parameters:\n\n* `player` (player)\n\nImplied parameters: \n\n* `name` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to claim the bonus the {{player}} gets for playing fights with EOS. The amount of fights needed for each bonus is defined in the contract. The {{ player }} also has to make sure he has enough RAM. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"claimexp","type":"claimexp","ricardian_contract":"# CONTRACT FOR eosimpbattle::claimexp\n## ACTION NAME: claimexp\n\n### Parameters\nInput parameters:\n\n* `player` (player)\n* `fight_id` (fight_id of the fight)\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to claim the exp from the fight {{ fight_id }}, which the player {{ player }} was part of. The amount of the EXP was determind by the contract and the {{ player }} can only get the exp once for the same fight with {{ fight_id }}. This contract invokes {{ eosimpbattle::dclaimexp }} through which the player will get his exp, if he gets some.{{ player }} also take note that the fight willbe deleted after both player claimed their exp. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"claimmki","type":"claimmki","ricardian_contract":"# CONTRACT FOR eosimpbattle::claimmki\n## ACTION NAME: claimmki\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the item)\n* `sell_id` (sell_id of the item)\n\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to transfer (claim) the bought and paid item {{ sell_id }} from the marketplace to the {{ player }} inventory. The {{ player }} needs to be the one who is the owner of the item und the one who bought the item.}} needs to be the one who is the owner of the item und the one who bought the item. The invoker also agrees to provide the need RAM to save the item. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"claimmkimp","type":"claimmkimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::claimmkimp\n## ACTION NAME: claimmkimp\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the imp)\n* `sell_id` (sell_id of the imp)\n\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change (claim) the ownership of the bought and paid imp {{ sell_id }} from the marketplace. The {{ player }} has to be the one who is the owner of the imp to be able to claim the imp. The invoker also agrees to provide the needed RAM to save the imp. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"consumeitem","type":"consumeitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::consumeitem\n## ACTION NAME: consumeitem\n\n### Parameters\nInput parameters:\n\n\n* `player` (player and owner of the item in the inventory)\n* `item_id` (item_id of the item in the inventory)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t`\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to consume the item {{ item_id }} which the {{player}} has in his inventory and add the exp or statspoints to the active imp. The {{ player }} has to take note that the used item will be deleted. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"createacc","type":"createacc","ricardian_contract":"# CONTRACT FOR eosimpbattle::createacc\n## ACTION NAME: createacc\n\n### Parameters\nInput parameters:\n\n* `player` (name of the new account which willl be created)\n* `play_with_eos` (if the player wants to play with eos)\n* `promoter` (name of a player who promoted the game)\n\n\nImplied parameters: \n\n* `name` \n* `uint8_t` \n* `name`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to create a new account for the invoker. The {{ player }} has to be a new player. The {{ player }} aslo to agrees to provide the needed RAM.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"createimp","type":"createimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::createimp\n## ACTION NAME: createimp\n\n### Parameters\nInput parameters:\n\n* `player` (player for whom the imp will be created)\n* `imp_name` (name of the imp)\n* `head` (id of the choosen head)\n* `body` (id of the choosen body)\n* `arms` (id of the choosen arms)\n* `legs` (id of the choosen legs)\n* `startweaponid` (id of the choosen starter weapon)\n* `color` (color of the imp which will be created)\n\n\n\nImplied parameters: \n\n* `name` \n* `string` \n* `uint64_t`\n* `uint64_t`\n* `uint64_t`\n* `uint64_t`\n* `uint64_t` \n* `string`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to create a new imp for the {{ player }}. The {{ player }} has also to take note, that he has to make sure he has enough RAM to save the new imp. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"csellimp","type":"csellimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::csellimp\n## ACTION NAME: csellimp\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the imp)\n* `market_id` (id of the imp in the marketplace)\n\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to cancel the sell of the imp {{ market_id }} from the marketplace or delete the reservation from an other player after the time for the reservation is over. The {{ player }} has to be the owner imp.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"dclaimexp","type":"dclaimexp","ricardian_contract":"# CONTRACT FOR eosimpbattle::dclaimexp\n## ACTION NAME: dclaimexp\n\n### Parameters\nInput parameters:\n\n* `player` (player)\n* `fight_id` (fight_id of the fight)\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to claim the exp from the fight {{ fight_id }}, which the player {{ player }} was part of. The amount of the EXP was determind by the contract and the {{ player }} can only get  the exp once for the same fight with {{ fight_id }}. The action can only be executed by the contract owner or the {{ player }} invoking it through {{ eosimpbattle::claimexp }}. If both player have claimed their EXP the fight will be deleted. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"deleteacc","type":"deleteacc","ricardian_contract":"# CONTRACT FOR eosimpbattle::deleteacc\n## ACTION NAME: deleteacc\n\n### Parameters\nInput parameters:\n\n* `player` (player of the account which should be deleted)\n\nImplied parameters: \n\n* `name` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to delete the account {{ player }} from the game. The {{ player }} also agrees to delete all game related object which he is owner of to be deleted. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"deleteimp","type":"deleteimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::deleteimp\n## ACTION NAME: deleteimp\n\n### Parameters\nInput parameters:\n\n* `player` (player)\n* `imp_id` (imp_id of the imp which the player owns and should be deleted)\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to delete seletced imp {{ imp_id }} which the player owns, with all the items the imp is wearing. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"deleteitem","type":"deleteitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::deleteitem\n## ACTION NAME: deleteitem\n\n### Parameters\nInput parameters:\n\n* `item_id` (item_id of the item which should be deleted)\n\n\n\nImplied parameters: \n\n* `uint64_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to delete an item from the game. This action can only be executed by the owner of the contract.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"delinvitem","type":"delinvitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::delinvitem\n## ACTION NAME: delinvitem\n\n### Parameters\nInput parameters:\n\n* `player` (player)\n* `item_id` (item_id of the item which should be deleted from the inventory of the player)\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to delete the selected item {{ item_id }} from {{player}} inventory. The owner of the item which should be deleted musst be the {{ player }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"dfightdatap1","type":"dfightdatap1","ricardian_contract":"# CONTRACT FOR eosimpbattle::dfightdatap1\n## ACTION NAME: dfightdatap1\n\n### Parameters\nInput parameters:\n\n* `player1` (player1 of the fight)\n* `fight_id` (id of the fight)\n* `attc_pos_r1` (attack position for round 1)\n* `attc_pos_r2` (attack position for round 2)\n* `attc_pos_r3` (attack position for round 3)\n* `attc_pos_r4` (attack position for round 4)\n* `attc_pos_r5` (attack position for round 5)\n* `def_pos_r1` (defense position for round 1)\n* `def_pos_r2` (defense position for round 2)\n* `def_pos_r3` (defense position for round 3)\n* `def_pos_r4` (defense position for round 4)\n* `def_pos_r5` (defense position for round 5)\n* `rndn` (random number for the hash value, which will be created)\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to 1. check if the right data where send as in {{ eosimpbattle::sendfight }} 2. either only save the data which where send or calculate the winner and send the winner 2x bid minus the fees if {{ player2 }} already send his data. The invoker {{ player1 }} musst be the player1 saved in the fight which is referenced through {{ fight_id }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"dfightdatap2","type":"dfightdatap2","ricardian_contract":"# CONTRACT FOR eosimpbattle::dfightdatap2\n## ACTION NAME: dfightdatap2\n\n### Parameters\nInput parameters:\n\n* `player2` (player2 of the fight)\n* `attc_pos_r1` (attack position for round 1)\n* `attc_pos_r2` (attack position for round 2)\n* `attc_pos_r3` (attack position for round 3)\n* `attc_pos_r4` (attack position for round 4)\n* `attc_pos_r5` (attack position for round 5)\n* `def_pos_r1` (defense position for round 1)\n* `def_pos_r2` (defense position for round 2)\n* `def_pos_r3` (defense position for round 3)\n* `def_pos_r4` (defense position for round 4)\n* `def_pos_r5` (defense position for round 5)\n* `fight_id` (id of the fight)\n* `rndn` (random number for the hash value, which will be created)\n\nImplied parameters: \n\n* `name` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint64_t` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to 1. check if the right data where send as in {{ eosimpbattle::acceptfight }} 2. either only save the data which where send or calculate the winner and send the winner 2x bid minus the fees if {{ player1 }} already send his data. The invoker {{ player2 }} musst be the player2 saved in the fight which is referenced through {{ fight_id }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"fightdatap1","type":"fightdatap1","ricardian_contract":"# CONTRACT FOR eosimpbattle::fightdatap1\n## ACTION NAME: fightdatap1\n\n### Parameters\nInput parameters:\n\n* `player1` (player1 of the fight)\n* `fight_id` (id of the fight)\n* `attc_pos_r1` (attack position for round 1)\n* `attc_pos_r2` (attack position for round 2)\n* `attc_pos_r3` (attack position for round 3)\n* `attc_pos_r4` (attack position for round 4)\n* `attc_pos_r5` (attack position for round 5)\n* `def_pos_r1` (defense position for round 1)\n* `def_pos_r2` (defense position for round 2)\n* `def_pos_r3` (defense position for round 3)\n* `def_pos_r4` (defense position for round 4)\n* `def_pos_r5` (defense position for round 5)\n* `rndn` (random number for the hash value, which will be created)\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to 1. check if the right data where send as in {{ eosimpbattle::sendfight }} and to invoke {{ eosimpbattle::dfightdatap1 }} where either only the data which where send are saved or calculate the winner and send the winner 2x bid minus the fees if {{ player2 }} already send his data. {{ player1 }} has to be same player1 which invoked the action {{ eosimpbattle::sendfight }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"fightdatap2","type":"fightdatap2","ricardian_contract":"# CONTRACT FOR eosimpbattle::fightdatap2\n## ACTION NAME: fightdatap2\n\n### Parameters\nInput parameters:\n\n* `player2` (player2 of the fight)\n* `attc_pos_r1` (attack position for round 1)\n* `attc_pos_r2` (attack position for round 2)\n* `attc_pos_r3` (attack position for round 3)\n* `attc_pos_r4` (attack position for round 4)\n* `attc_pos_r5` (attack position for round 5)\n* `def_pos_r1` (defense position for round 1)\n* `def_pos_r2` (defense position for round 2)\n* `def_pos_r3` (defense position for round 3)\n* `def_pos_r4` (defense position for round 4)\n* `def_pos_r5` (defense position for round 5)\n* `fight_id` (id of the fight)\n* `rndn` (random number for the hash value, which will be created)\n\nImplied parameters: \n\n* `name` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t` \n* `uint64_t` \n* `uint64_t` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to 1. check if the right data where send as in {{ eosimpbattle::acceptfight }} and to invoke {{ eosimpbattle::dfightdatap2 }} where either only the data which where send are saved or calculate the winner and send the winner 2x bid minus the fees if {{ player1 }} already send his data. {{ player2 }} has to be same player2 which invoked the action {{ eosimpbattle::acceptfight }} and is player2 in the fight referenced through {{ fight_id }}.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"fightpaid","type":"fightpaid","ricardian_contract":"# CONTRACT FOR eosimpbattle::fightpaid\n## ACTION NAME: fightpaid\n\n### Parameters\nInput parameters:\n\n* `fight_id` (player2 of the fight)\n* `player` (player2 of the new fight)\n\n\nImplied parameters: \n\n\n* `uint64_t` \n* `name` \n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to set the player who paid the bid as checkedand only if the player has paid the bid to account eostransimps. This contract can only be executed by the owner of the contract or an account with the right permissions. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"getpromoitem","type":"getpromoitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::getpromoitem\n## ACTION NAME: getpromoitem\n\n### Parameters\nInput parameters:\n\n\n* `player` (player and owner of the promotion item)\n* `pos` (position of the promoitem)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t`\n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to transfer the promoitem, which the player has for his account, to the players inventory. {{ player }} can only transfer his own promoitems. {{ player }} also agrees to make sure he has enough RAM.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"initialize","type":"initialize","ricardian_contract":"# CONTRACT FOR eosimpbattle::initialize\n## ACTION NAME: initialize\n\n### Parameters\nInput parameters:\n\n\n\n\nImplied parameters: \n\n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to initialize the game. This action can only be executed from the owner of the contract.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"login","type":"login","ricardian_contract":"# CONTRACT FOR eosimpbattle::login\n## ACTION NAME: login\n\n### Parameters\nInput parameters:\n\n* `player` (player who should be checked)\n\nImplied parameters: \n\n* `account_name` (name of the party invoking and signing the contract)\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to check if the inkover has already an account in the game. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"playwitheos","type":"playwitheos","ricardian_contract":"# CONTRACT FOR eosimpbattle::playwitheos\n## ACTION NAME: playwitheos\n\n### Parameters\nInput parameters:\n\n* `player` (player of the account)\n* `play_with_eos` (play_with_eos value if the player wants to play with EOS)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint8_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change if the {{player}} wants to play with EOS or not. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"sellimp","type":"sellimp","ricardian_contract":"# CONTRACT FOR eosimpbattle::sellimp\n## ACTION NAME: sellimp\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the imp)\n* `imp_id` (id of the imp which should be sold)\n* `price` (price of the imp)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `asset`\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to sell and add the imp {{ imp_id }} which the player owns to the marketplace. {{ player }} agrees to make sure he has enough RAM to save the created sell entry for his imp.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"sellitem","type":"sellitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::sellitem\n## ACTION NAME: sellitem\n\n### Parameters\nInput parameters:\n\n* `player` (player and owner of the item)\n* `item_id` (id of the item)\n* `price` (price of the item in the  inventory)\n\n\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n* `asset`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to sell an item {{ item_id }} from the inventory of the {{ player }} with the specified {{ price }}. {{ player }} agrees to make sure he has enough RAM to save the created sell item. {{ player }} also agrees that he might get less EOS from the sell because of  inaccuracy after the fee were deducted.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n\n"},{"name":"sendfight","type":"sendfight","ricardian_contract":"# CONTRACT FOR eosimpbattle::sendfight\n## ACTION NAME: sendfight\n\n### Parameters\nInput parameters:\n\n* `player1` (player1 and create of a new fight)\n* `player2` (player2 of the new fight)\n* `hash` (ahshvalue of the attack/defense data)\n* `bid` (bid per player for the fight)\n* `opp_imp_id` (id of the opponents imp)\n\n\nImplied parameters: \n\n* `name` \n* `name` \n* `checksum256` \n* `asset` \n* `uint64_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to create a new fight and challenge {{ player2 }} to a fight with the specified {{ bid }}. The {{ player1 }} (invoker) is clear that the choosen attc_pos_r1 - attc_pos_r5 and def_pos_r1 - def_pos_r5 and {{rndn}} can not be changed later when {{ eosimpbattle::fightdatap1}} is invoked,as these will be used to generate a hash-value. You also accept if you bid EOS, that you might get less EOS back for a win or draw because of inaccuracy after the fee were deducted. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"simpactive","type":"simpactive","ricardian_contract":"# CONTRACT FOR eosimpbattle::simpactive\n## ACTION NAME: simpactive\n\n### Parameters\nInput parameters:\n\n* `player` (player)\n* `imp_id` (imp_id of the imp which the player owns and should be the active imp for player)\n\nImplied parameters: \n\n* `name` \n* `uint64_t` \n\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to set the  imp {{ imp_id }} active, which the player owns. \n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"},{"name":"updateitem","type":"updateitem","ricardian_contract":"# CONTRACT FOR eosimpbattle::updateitem\n## ACTION NAME: updateitem\n\n### Parameters\nInput parameters:\n\n* `item_id` (id of the item)\n* `type` (type of the item)\n* `name` (name of the item)\n* `atk` (attack value of the item)\n* `def` (defense value of the item)\n* `exp` (exp value of the item)\n* `statspoints` (statspoints value of the item)\n* `consumable` (if item is consumable)\n* `lvl` (aneeded lvl)\n* `premium` (if item is premium)\n* `marketplace` (if item is in the marketplace)\n* `customized` (if item is customized)\n\n\nImplied parameters: \n\n* `uint64_t` \n* `uint64_t` \n* `string`\n* `uint16_t`\n* `uint16_t`\n* `uint16_t`\n* `uint16_t` \n* `uint8_t`\n* `uint64_t`\n* `uint8_t`\n* `uint8_t`\n* `uint8_t`\n\n\n### Intent\nINTENT. The intention of the author and the invoker of this contract is to change the item with the parameters. This action can only be executed from the owner of the contract.\n\n### Term\nTERM. This Contract expires at the conclusion of code execution.\n"}],"tables":[{"name":"items","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"items"},{"name":"imps","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"imps"},{"name":"accounts","index_type":"i64","key_names":["owner"],"key_types":["name"],"type":"accounts"},{"name":"gameconf","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"gameconf"},{"name":"fights","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"fights"},{"name":"globalcount","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"globalcount"},{"name":"marketplace","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"marketplace"},{"name":"marketsell","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"marketsell"},{"name":"mktpclaim","index_type":"i64","key_names":["id"],"key_types":["uint64"],"type":"mktpclaim"},{"name":"playertmp","index_type":"i64","key_names":["id"],"key_types":["name"],"type":"playertmp"}],"error_messages":[],"abi_extensions":[],"variants":[]}